[
  {
    id: st-schroedinger
    debugCategory: Quest
    title: txt-st-schroedinger-title
    description: txt-st-schroedinger
    sprite: res_status_box.png
    important: true
  }
  {
    id: loc-treasure-schroedinger
    debugCategory: quest
    mapScore: 0
    showHint: false
    flags: +burriedTreasureSchroedinger
    hideParty: false
    setTile: [
      {ref: tl-dry-jungle-thick, reqBiomeFlags: +dry}
      {ref: tl-desert, reqBiomeFlags: +desert}
      {ref: tl-deepSnow, reqBiomeFlags: +arctic}
      {ref: tl-jungle-thick}
    ]
  }
  {
    id: it-map-schroedinger
    name: txt-it-map-schroedinger-name
    description: txt-it-map-schroedinger
    debugCategory: quest
    sprite: it_special_map_1.png
    value: 0
    maxStack: 1
    autoRemove: true
    noWeight: true
    losable: false
    miniMap: {
      width: 150
      height: 150
      coverage: 1
      initEvents: {
        addLocation: {ref: loc-treasure-schroedinger, range: world}
      }
    }
  }
  {
    id: it-box-schroedinger
    name: txt-it-box-schroedinger-name
    description: txt-it-box-schroedinger
    debugCategory: quest
    sprite: it_quest_box_1.png
    value: {base: 0, karma: karmaVeryLarge}
    maxStack: 1
    useEvents: {
      text: txt-it-box-schroedinger-use
      partyEvents: {ref: evt-setImage-nightCamp}
      playMusic: thm_nature_night_campfire
      actions: [
        {
          actionText: txt-it-box-schroedinger-action
          text: txt-it-box-schroedinger-open
          items: {it-box-schroedinger: -1}
          setPartyStatus: -schroedinger
          startSprawl: {ref: spr-void, power: 10000}
          incAchievement: ach-mystery-box
        }
        evt-leave
      ]
    }
  }
  {
    id: evt-harbor-quest-schroedinger
    npc: npc-schroedinger
    text: txt-evt-harbor-quest-schroedinger
    actions: [
      {
        actionText: txt-evt-harbor-quest-missionary-action
        text: txt-evt-harbor-quest-schroedinger-1
        setPartyStatus: +st-schroedinger
        items: {it-map-schroedinger: 1}
        select: evt-harbor-eventSelection
      }
      {
        actionText: txt-evt-angry-demandPayment-action-1
        text: txt-evt-harbor-quest-schroedinger-2
        select: evt-harbor-eventSelection
      }
    ]
  }
  {
    id: evt-harbor-quest-schroedinger-complete
    reqPartyStatus: +schroedinger
    setPartyStatus: -schroedinger
    npc: npc-schroedinger
    text: txt-evt-harbor-quest-schroedinger-complete
    actions: [
      {
        actionText: txt-evt-harbor-quest-schroedinger-complete-action
        text: txt-evt-harbor-quest-schroedinger-complete-1
        reqItems: {it-box-schroedinger: 1..}
        items: {it-box-schroedinger: -1}
        incAchievement: ach-complete-quests
        actions: evt-harbor-quest-reward
      }
      {
        actionText: txt-evt-angry-demandPayment-action-1
        text: txt-evt-harbor-quest-schroedinger-complete-2
        reqItems: {it-box-schroedinger: 1..}
        fame: -fameLarge
        select: evt-harbor-eventSelection
      }
      {
        actionText: txt-evt-harbor-quest-schroedinger-complete-action-1
        text: txt-evt-harbor-quest-schroedinger-complete-3
        reqItems: {it-box-schroedinger: 0}
        fame: -fameLarge
        select: evt-harbor-eventSelection
      }
    ]
  }
]